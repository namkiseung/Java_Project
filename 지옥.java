package 환생하기프로젝트발표용.copy;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Random;
import java.util.Scanner;

public class 지옥 extends 스토리멘트 {
	
	private static int 레벨단계카운드;

	public static void main(String[] args) throws InterruptedException {
	Scanner 사용자입력 = new Scanner(System.in);
	Scanner 추가변호받을꺼 = new Scanner(System.in);
	Random ran = new Random();
		final 플레이어 망자1대 = new 플레이어();//망자 클래스의 '망자1대'객체생성
		final 판관 판관1대 = new 판관();//판관 클래스의 '판관1대'객체생성
		final NPC유닛 차사1대 = new NPC유닛();//차사 클래스의 '차사1대'객체생성
		final 차사 추가변호 = new 차사();
		final 귀인 귀인1대 = new 귀인();
		//귀인 귀인1대 = new 귀인();//귀인 클래스의 '차사1대'객체생성
		
		
		System.out.println("		[명명]   **망자의 생년월은 "+망자1대.년도+"년 "+망자1대.월+"월 이며, 사망 위치 좌표는 ("+망자1대.x+", "+망자1대.y+")로 무사히 사망 하였습니다.**");
		System.out.println("		[명명]   **망자가 생전에 지은 죄(점수) : "+망자1대.점수+"점 입니다.**");
		while(true) {
			///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
			try {
				사망대기스레드 사망자명단 = new 사망대기스레드();
				사망자명단.start();
				사용자입력.nextLine();//이 값으로 게임시작 여부 정한다
				break;
				} catch (InputMismatchException ime) {
				사용자입력 = new Scanner(System.in);
				System.out.print("[경고] 재입력  : ");
				초재기7초스레드 초재기 = new 초재기7초스레드();
				초재기.start();
				게임종료멘트();
				continue;
				}
		}		
			///////
		
		//////
		스토리쓰레드적용 시작 = new 스토리쓰레드적용();
		Thread 하자 = new Thread(시작);
		하자.start();
		int 차사선택할입력;
							while(true) {
								///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
								try {
								차사선택할입력 = 사용자입력.nextInt();//이 값으로 선임할 차사를 선택하자
									break;
								} catch (InputMismatchException ime) {
									사용자입력 = new Scanner(System.in);
									System.out.print("[경고] 재입력  : ");
									초재기7초스레드 초재기 = new 초재기7초스레드();
									초재기.start();
									게임종료멘트();
									continue;
								}
							}		
								///////
				차사1대.추가변호인자(차사선택할입력);//차사선택시 입력한 값이 저장되어 있다. (즉, 한번 선택한 차사 위치 간직!)
				망자1대.레벨업(1);지옥단계(망자1대.레벨);//지옥클래스의 맵 객체변수로 지옥단계 스테틱 메소드 호출로 현재 단계 알수 있음.
				System.out.println("          ○ 추가로 변호된 점수 : 없습니다.");
				System.out.println("          ○ 망자의 컨디션 상태 : '두려움'");
				int 망자1대현재점수 = 망자1대.점수;//망자의 현재점수변수에 d망자1대 객체의 점수변수를 넣어둔다.
				System.out.println("          ○ 망자의 현재 죄 값은 : "+망자1대.점수+"점 입니다.");
				System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
				System.out.println();
							
					파티션();지옥재판진행();yesor2();//스토리멘트 클래스의 메소드(입력x리턴x)호출
					int 신과함께게임시작;
								while(true) {
									///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
									try {
										신과함께게임시작 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
										break;
										} catch (InputMismatchException ime) {
										사용자입력 = new Scanner(System.in);
										System.out.print("[경고] 재입력  : ");
										초재기7초스레드 초재기 = new 초재기7초스레드();
										초재기.start();
										게임종료멘트();
										continue;
										}
								}		
									///////
					if(1==신과함께게임시작) {
						//1-1 지옥 스토리시작
						지옥단계(망자1대.레벨);
							질문파티션();인턴판관왈();
							System.out.println(판관1대.인턴직질문1_1);
							yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
							//예외처리하기
							int 물음대답;//물음대답에 값이 입력될때마다 레벨 횟수증가
										while(true) {
											///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
											try {
											물음대답 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
											break;
											} catch (InputMismatchException ime) {
												사용자입력 = new Scanner(System.in);
												System.out.print("[경고] 재입력  : ");
												초재기7초스레드 초재기 = new 초재기7초스레드();
												초재기.start();
												게임종료멘트();
												continue;
											}
										}		
											///////
							망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
							if(1==물음대답) {
								스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else if(2==물음대답) {
								스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else if(3==물음대답) { //차사의 변호 (손이큰
								스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else {//정규체벌 -5점 확정 그리고 추가변호 기회
								스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}
							System.out.println();
						//1-2 지옥 스토리시작
							질문파티션();계약판관왈();
							System.out.println(판관1대.계약직질문1_2);
							yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
										while(true) {
												///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
												try {
													//throw new NumberFormatException("점수가 너무 큼");
												물음대답 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
												break;
												} catch (InputMismatchException ime) {
													사용자입력 = new Scanner(System.in);
													System.out.print("[경고] 재입력  : ");
													초재기7초스레드 초재기 = new 초재기7초스레드();
													초재기.start();
													게임종료멘트();
													continue;
												}
										}		
												///////
							망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
							if(1==물음대답) {
								스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else if(2==물음대답) {
								스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else if(3==물음대답) { //차사의 변호 (손이큰
								스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else {//정규체벌 -5점 확정 그리고 추가변호 기회
								스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}
							System.out.println();
						//1-3 지옥스토리
							질문파티션();정규판관왈();
							System.out.println(판관1대.정규직질문1_3);
							yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
							망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
											while(true) {
												///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
												try {
												물음대답 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
												break;
												} catch (InputMismatchException ime) {
													사용자입력 = new Scanner(System.in);
													System.out.print("[경고] 재입력  : ");
													초재기7초스레드 초재기 = new 초재기7초스레드();
													초재기.start();
													게임종료멘트();
													continue;
												}
											}		
												///////
							if(1==물음대답) {
								스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else if(2==물음대답) {
								스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else if(3==물음대답) { //차사의 변호 (손이큰
								스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}else {//정규체벌 -5점 확정 그리고 추가변호 기회
								스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
								망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
								망자1대.내정보(망자1대.점수);
							}
							System.out.println();
										//추가변호(추가선임한 차사)
										추가변호파티션();
										System.out.print("차사의 추가변호를 받으시겠습니까?");yesor2();
												int 추가변호할꺼말꺼; 
														while(true) {
															///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
															try {
															추가변호할꺼말꺼=추가변호받을꺼.nextInt();
															break;
															} catch (InputMismatchException ime) {
															사용자입력 = new Scanner(System.in);
															System.out.print("[경고] 재입력  : ");
															초재기7초스레드 초재기 = new 초재기7초스레드();
															초재기.start();
															게임종료멘트();
															continue;
															}
														}		
															///////
												if(추가변호할꺼말꺼==1) {
													if(차사선택할입력==1) {//기분파
														내정보파티션();
														차사1대.추가변호(차사선택할입력);
														망자1대.내정보업데이트(망자1대.점수+차사1대.기분파추가점수);//NPC유닛안에서 랜덤값 받은 값이 망자의점수로 업데이트
														망자1대.내정보(망자1대.점수);
														System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
														파티션();
													}else if(차사선택할입력==2){//소심파
														내정보파티션();
														차사1대.추가변호(차사선택할입력);
														망자1대.내정보업데이트(망자1대.점수+차사1대.소심파추가점수);
														망자1대.내정보(망자1대.점수);
														System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
														파티션();
													}else if(차사선택할입력==3){//도박파
														내정보파티션();
														차사1대.추가변호(차사선택할입력);
														망자1대.내정보업데이트(망자1대.점수+차사1대.도박파추가점수);
														망자1대.내정보(망자1대.점수);
														System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
														파티션();
													}else {
														내정보파티션();
														차사1대.추가변호(차사선택할입력);
														망자1대.내정보(망자1대.점수);
														System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
														파티션();
													}
												}else {
													내정보파티션();
													System.out.println("          ○ 차사의 추가변호 없이 진행을 선택하셨습니다.");
													System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
													파티션();
												}
				//2-1 지옥스토리
												지옥단계(2);
												질문파티션();인턴판관왈();
												System.out.println(판관1대.인턴직질문2_1);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
												//예외처리하기
												int 물음대답2;//물음대답에 값이 입력될때마다 레벨 횟수증가
															while(true) {
																///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																try {
																물음대답2 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																break;
																} catch (InputMismatchException ime) {
																	사용자입력 = new Scanner(System.in);
																	System.out.print("[경고] 재입력  : ");
																	초재기7초스레드 초재기 = new 초재기7초스레드();
																	초재기.start();
																	게임종료멘트();
																	continue;
																}
															}		
																///////
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
												if(1==물음대답2) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답2) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답2) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();
				//2-2 지옥스토리
												질문파티션();계약판관왈();
												System.out.println(판관1대.계약직질문2_2);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
															while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																		//throw new NumberFormatException("점수가 너무 큼");
																	물음대답2 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																	break;
																	} catch (InputMismatchException ime) {
																		사용자입력 = new Scanner(System.in);
																		System.out.print("[경고] 재입력  : ");
																		초재기7초스레드 초재기 = new 초재기7초스레드();
																		초재기.start();
																		게임종료멘트();
																		continue;
																	}
															}		
																	///////
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
												if(1==물음대답2) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답2) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답2) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();
				//2-3 지옥스토리
												질문파티션();정규판관왈();
												System.out.println(판관1대.정규직질문2_3);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
																while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																	물음대답2 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																	break;
																	} catch (InputMismatchException ime) {
																		사용자입력 = new Scanner(System.in);
																		System.out.print("[경고] 재입력  : ");
																		초재기7초스레드 초재기 = new 초재기7초스레드();
																		초재기.start();
																		게임종료멘트();
																		continue;
																	}
																}		
																	///////
												if(1==물음대답2) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답2) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답2) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();
												//추가변호(추가선임한 차사)
												추가변호파티션();
												System.out.print("차사의 추가변호를 받으시겠습니까?");yesor2(); 
																while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																	추가변호할꺼말꺼=추가변호받을꺼.nextInt();
																	break;
																	} catch (InputMismatchException ime) {
																	사용자입력 = new Scanner(System.in);
																	System.out.print("[경고] 재입력  : ");
																	초재기7초스레드 초재기 = new 초재기7초스레드();
																	초재기.start();
																	게임종료멘트();
																	continue;
																	}
																}		
																	///////
														if(추가변호할꺼말꺼==1) {
															if(차사선택할입력==1) {//기분파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.기분파추가점수);//NPC유닛안에서 랜덤값 받은 값이 망자의점수로 업데이트
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else if(차사선택할입력==2){//소심파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.소심파추가점수);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else if(차사선택할입력==3){//도박파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.도박파추가점수);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else {
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}
														}else {
															내정보파티션();
															System.out.println("          ○ 차사의 추가변호 없이 진행을 선택하셨습니다.");
															System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
															파티션();
														}
				//3-1 지옥스토리
												지옥단계(3);
												질문파티션();인턴판관왈();
												System.out.println(판관1대.인턴직질문3_1);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
												//예외처리하기
												int 물음대답3;//물음대답에 값이 입력될때마다 레벨 횟수증가
															while(true) {
																///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																try {
																물음대답3 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																break;
																} catch (InputMismatchException ime) {
																	사용자입력 = new Scanner(System.in);
																	System.out.print("[경고] 재입력  : ");
																	초재기7초스레드 초재기 = new 초재기7초스레드();
																	초재기.start();
																	게임종료멘트();
																	continue;
																}
															}		
																///////
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
												if(1==물음대답3) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답3) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답3) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();
				//3-2 지옥스토리
												질문파티션();계약판관왈();
												System.out.println(판관1대.계약직질문3_2);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
															while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																		//throw new NumberFormatException("점수가 너무 큼");
																	물음대답3 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																	break;
																	} catch (InputMismatchException ime) {
																		사용자입력 = new Scanner(System.in);
																		System.out.print("[경고] 재입력  : ");
																		초재기7초스레드 초재기 = new 초재기7초스레드();
																		초재기.start();
																		게임종료멘트();
																		continue;
																	}
															}		
																	///////
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
												if(1==물음대답3) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답3) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답3) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();
				//3-3 지옥스토리
												질문파티션();정규판관왈();
												System.out.println(판관1대.정규직질문3_3);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
																while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																	물음대답3 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																	break;
																	} catch (InputMismatchException ime) {
																		사용자입력 = new Scanner(System.in);
																		System.out.print("[경고] 재입력  : ");
																		초재기7초스레드 초재기 = new 초재기7초스레드();
																		초재기.start();
																		게임종료멘트();
																		continue;
																	}
																}		
																	///////
												if(1==물음대답3) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답3) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답3) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();
												//추가변호(추가선임한 차사)
												추가변호파티션();
												System.out.print("차사의 추가변호를 받으시겠습니까?");yesor2(); 
																while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																	추가변호할꺼말꺼=추가변호받을꺼.nextInt();
																	break;
																	} catch (InputMismatchException ime) {
																	사용자입력 = new Scanner(System.in);
																	System.out.print("[경고] 재입력  : ");
																	초재기7초스레드 초재기 = new 초재기7초스레드();
																	초재기.start();
																	게임종료멘트();
																	continue;
																	}
																}		
																	///////
														if(추가변호할꺼말꺼==1) {
															if(차사선택할입력==1&&차사1대.기분파차사횟수>0&&차사1대.소심파차사횟수>0&&차사1대.도박파차사횟수>0) {//기분파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.기분파추가점수);//NPC유닛안에서 랜덤값 받은 값이 망자의점수로 업데이트
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else if(차사선택할입력==2&&차사1대.기분파차사횟수>0&&차사1대.소심파차사횟수>0&&차사1대.도박파차사횟수>0){//소심파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.소심파추가점수);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else if(차사선택할입력==3&&차사1대.기분파차사횟수>0&&차사1대.소심파차사횟수>0&&차사1대.도박파차사횟수>0){//도박파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.도박파추가점수);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else {
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}
														}else {
															내정보파티션();
															System.out.println("          ○ 차사의 추가변호 없이 진행을 선택하셨습니다.");
															System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
															파티션();
														}			
						
	      		//7-1 지옥스토리
												지옥단계(7);
												질문파티션();인턴판관왈();
												System.out.println(판관1대.인턴직질문7_1);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
												//예외처리하기
												int 물음대답7;//물음대답에 값이 입력될때마다 레벨 횟수증가
															while(true) {
																///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																try {
																물음대답7 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																break;
																} catch (InputMismatchException ime) {
																	사용자입력 = new Scanner(System.in);
																	System.out.print("[경고] 재입력  : ");
																	초재기7초스레드 초재기 = new 초재기7초스레드();
																	초재기.start();
																	게임종료멘트();
																	continue;
																}
															}		
																///////
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
												if(1==물음대답7) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답7) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답7) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();				
	            //7-2 지옥스토리
												질문파티션();계약판관왈();
												System.out.println(판관1대.계약직질문7_2);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
															while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																		//throw new NumberFormatException("점수가 너무 큼");
																	물음대답7 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																	break;
																	} catch (InputMismatchException ime) {
																		사용자입력 = new Scanner(System.in);
																		System.out.print("[경고] 재입력  : ");
																		초재기7초스레드 초재기 = new 초재기7초스레드();
																		초재기.start();
																		게임종료멘트();
																		continue;
																	}
															}		
																	///////
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
												if(1==물음대답7) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답7) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답7) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();		
				//7-3 지옥스토리
												질문파티션();정규판관왈();
												System.out.println(판관1대.정규직질문7_3);
												yesor4();//스토리멘트 클래스의 메소드(입력x리턴x)호출
												망자1대.진행율카운트++;//망자의 진행율 알려줄때 카운트 값을 셀 변수(질문개수로 진행율 나누기)
																while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																	물음대답7 = 사용자입력.nextInt();//이 값으로 게임시작 여부 정한다
																	break;
																	} catch (InputMismatchException ime) {
																		사용자입력 = new Scanner(System.in);
																		System.out.print("[경고] 재입력  : ");
																		초재기7초스레드 초재기 = new 초재기7초스레드();
																		초재기.start();
																		게임종료멘트();
																		continue;
																	}
																}		
																	///////
												if(1==물음대답7) {
													스토리1번대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.계약직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(2==물음대답7) {
													스토리모름대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.인턴체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else if(3==물음대답7) { //차사의 변호 (손이큰
													스토리변호대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(차사1대.변호하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}else {//정규체벌 -5점 확정 그리고 추가변호 기회
													스토리묵언대답();//스토리멘트 클래스의 메소드(입력x리턴x)호출
													망자1대.내정보업데이트(판관1대.정규직체벌하기(망자1대.점수));
													망자1대.내정보(망자1대.점수);
												}
												System.out.println();
												//추가변호(추가선임한 차사)
												추가변호파티션();
												System.out.print("차사의 추가변호를 받으시겠습니까?");yesor2(); 
																while(true) {
																	///////차사선택할입력에 엉뚱한 대답하면은 재입력으로 가정 
																	try {
																	추가변호할꺼말꺼=추가변호받을꺼.nextInt();
																	break;
																	} catch (InputMismatchException ime) {
																	사용자입력 = new Scanner(System.in);
																	System.out.print("[경고] 재입력  : ");
																	초재기7초스레드 초재기 = new 초재기7초스레드();
																	초재기.start();
																	게임종료멘트();
																	continue;
																	}
																}		
																	///////
														if(추가변호할꺼말꺼==1) {
															if(차사선택할입력==1&&차사1대.기분파차사횟수>0&&차사1대.소심파차사횟수>0&&차사1대.도박파차사횟수>0) {//기분파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.기분파추가점수);//NPC유닛안에서 랜덤값 받은 값이 망자의점수로 업데이트
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else if(차사선택할입력==2&&차사1대.기분파차사횟수>0&&차사1대.소심파차사횟수>0&&차사1대.도박파차사횟수>0){//소심파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.소심파추가점수);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else if(차사선택할입력==3&&차사1대.기분파차사횟수>0&&차사1대.소심파차사횟수>0&&차사1대.도박파차사횟수>0){//도박파
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보업데이트(망자1대.점수+차사1대.도박파추가점수);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}else {
																내정보파티션();
																차사1대.추가변호(차사선택할입력);
																망자1대.내정보(망자1대.점수);
																System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
																파티션();
															}
														}else {
															내정보파티션();
															System.out.println("          ○ 차사의 추가변호 없이 진행을 선택하셨습니다.");
															System.out.println("          ○ 망자의 재판 진행율 : "+망자1대.레벨업(망자1대.진행율카운트)+"% 입니다.");
															파티션();
														}
							}else {
						게임종료멘트();
					}
						
				//환생여부
					
					System.out.print("잠시후 5초 뒤 시공간을 초월하여 지옥심판 결과가 출력됩니다.  ");
					System.out.println("   마음의 준비가 끝난 후 [Enter]를 입력해주세요.");
					환생초재기5초스레드 마지막결과 = new 환생초재기5초스레드();
					마지막결과.start();
					
					if (사용자입력.nextLine() != null) {
						for(int i=50; i>0; i--) {
							 시공간초월스레드 가즈아 = new 시공간초월스레드(i);
						      마지막결과.join();
						      가즈아.start();
						  가즈아.join();
						  i=i-2;
						 }
						
					Runnable 환생결과 = new Runnable() {
							public void run() {
									// TODO Auto-generated method stub
								try {
								
									if(망자1대.점수>=80) {
										System.out.println(판관1대.환생결정(망자1대.점수));						
									}else if(망자1대.점수<80 || 망자1대.점수>=60) {
										System.out.println(판관1대.환생결정(망자1대.점수));
									}else {
										System.out.println(판관1대.환생결정(망자1대.점수));
									}
								} catch (Exception e) {
									// TODO: handle exception
									e.printStackTrace();
								}
							}
					};
					Thread 보여주자 = new Thread(환생결과);
					보여주자.start();
				}		
						 
	}
}
			
			
				
	
	

	

